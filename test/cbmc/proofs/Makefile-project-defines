# -*- mode: makefile -*-
# The first line sets the emacs major mode to Makefile

################################################################
# Use this file to give project-specific definitions of the command
# line arguments to pass to CBMC tools like goto-cc to build the goto
# binaries and cbmc to do the property and coverage checking.
#
# Use this file to override most default definitions of variables in
# Makefile.common.
################################################################

# Flags to pass to goto-cc for compilation (typically those passed to gcc -c)
COMPILE_FLAGS += -fPIC
COMPILE_FLAGS += -std=gnu90

# Path to litani executable, used for running proofs and displaying report
LITANI ?= $(SRCDIR)/test/cbmc/litani/litani
PROJECT_NAME = "FreeRTOS coreMQTT"


# Flags to pass to goto-cc for linking (typically those passed to gcc)
LINK_FLAGS =

# Preprocessor include paths -I...
INCLUDES += -I$(SRCDIR)/test/cbmc/include
INCLUDES += -I$(SRCDIR)/source/include
INCLUDES += -I$(SRCDIR)/source/src
INCLUDES += -I$(SRCDIR)/source/portable

# Preprocessor definitions -D...
DEFINES += -Dmqtt_EXPORTS

################################################################
# Use the external solver kissat for property checking when it is
# available.  The kissat solver cannot be used for coverage checking,
# because coverage checking requires an incremental solver.
#
# The kissat solver is usually faster than the default solver minisat.
# If you encounter a proof for which minisat is actually faster, you
# can add the definition
#
#         EXTERNAL_SAT_SOLVER_KISSAT =
#
# to the proof makefile to force the use of minisat for that proof.
# The kissat solver cannot be used to speed up coverage checking
# because that requires an incremental sat solver.

ifeq ($(shell which kissat),)
  EXTERNAL_SAT_SOLVER_KISSAT ?=
else
  EXTERNAL_SAT_SOLVER_KISSAT ?= --external-sat-solver kissat
endif

CHECKFLAGS += $(EXTERNAL_SAT_SOLVER_KISSAT)
